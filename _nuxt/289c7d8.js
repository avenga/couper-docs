(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{548:function(e,n,t){"use strict";t.r(n);var r,o=t(94),c=t.n(o),l=t(161),d=t(261),m=["components"],h={};function f(e){var n=e.components,t=Object(l.a)(e,m);return r("wrapper",c()([{},h,{},t,{attrs:{components:n,mdxType:"MDXLayout"}}]),[r("h1",["Examples"]),r("h2",["File and Web Serving"]),r("p",["Couper contains a Web server for simple file serving and also takes care of the more complex web serving of SPA assets."]),r("pre",[r("code",c()([{attrs:{parentName:"pre"}},{className:"language-hcl"}]),['server "example" {\n\n  files {\n    document_root = "htdocs"\n  }\n\n  spa {\n    bootstrap_file = "htdocs/index.html"\n    paths = ["/**"]\n  }\n}\n'])]),r("p",["The ",r("inlineCode",{attrs:{parentName:"p"}},["files"])," block configures Couper's file server. It needs to know which directory to serve (",r("inlineCode",{attrs:{parentName:"p"}},["document_root"]),")."]),r("p",["The ",r("inlineCode",{attrs:{parentName:"p"}},["spa"])," block is responsible for serving the bootstrap document for all paths that match the paths list."]),r("h2",["Exposing APIs"]),r("p",["Couper's main concept is exposing APIs via the configuration block ",r("inlineCode",{attrs:{parentName:"p"}},["endpoint"]),", fetching data from upstream or remote services, represented by the configuration block ",r("inlineCode",{attrs:{parentName:"p"}},["backend"]),"."]),r("pre",[r("code",c()([{attrs:{parentName:"pre"}},{className:"language-hcl"}]),['server "example"{\n\n  endpoint "/public/**"{\n\n    proxy {\n      backend {\n        origin = "https://httpbin.org"\n        path = "/**"\n      }\n    }\n  }\n}\n'])]),r("p",["This basic configuration defines an upstream backend service (",r("inlineCode",{attrs:{parentName:"p"}},["https://httpbin.org"]),') and "mounts" it on the local API endpoint ',r("inlineCode",{attrs:{parentName:"p"}},["/public/**"]),"."]),r("p",["An incoming request ",r("inlineCode",{attrs:{parentName:"p"}},["/public/foo"])," will result in an outgoing request ",r("inlineCode",{attrs:{parentName:"p"}},["https://httpbin.org/foo"]),"."]),r("h2",["Securing APIs"]),r("p",["Access control is controlled by an\n",r("a",c()([{attrs:{parentName:"p"}},{href:"./REFERENCE.md#access-control"}]),["Access Control"])," attribute that can be set for many blocks."]),r("pre",[r("code",c()([{attrs:{parentName:"pre"}},{className:"language-hcl"}]),['server "example" {\n\n  endpoint "/private/**" {\n    access_control = ["accessToken"]\n\n    proxy {\n      backend {\n        origin = "https://httpbin.org"\n        path = "/**"\n      }\n    }\n  }\n\n  definitions {\n    jwt "accessToken" {\n      signature_algorithm = "RS256"\n      key_file = "keys/public.pem"\n      header = "Authorization"\n    }\n  }\n}\n'])]),r("p",["This configuration protects the endpoint ",r("inlineCode",{attrs:{parentName:"p"}},["/private/**"])," with the access control ",r("inlineCode",{attrs:{parentName:"p"}},['"accessToken"'])," configured in the ",r("inlineCode",{attrs:{parentName:"p"}},["definitions"])," block."]),r("h2",["Routing: Path Mapping"]),r("pre",[r("code",c()([{attrs:{parentName:"pre"}},{className:"language-hcl"}]),['api "my_api" {\n  base_path = "/api/v1"\n\n  endpoint "/login/**" {\n    proxy {\n      backend {\n        origin = "http://identityprovider:8080"\n      }\n    }\n  }\n\n  endpoint "/cart/**" {\n    proxy {\n      url = "http://cartservice:8080/api/v1/**"\n    }\n  }\n\n  endpoint "/account/{id}" {\n    proxy {\n      backend {\n        path = "/user/${request.param.id}/info"\n        origin = "http://accountservice:8080"\n      }\n    }\n  }\n}\n'])]),r("table",[r("thead",{attrs:{parentName:"table"}},[r("tr",{attrs:{parentName:"thead"}},[r("th",c()([{attrs:{parentName:"tr"}},{align:"left"}]),["Incoming request"]),r("th",c()([{attrs:{parentName:"tr"}},{align:"left"}]),["Outgoing request"])])]),r("tbody",{attrs:{parentName:"table"}},[r("tr",{attrs:{parentName:"tbody"}},[r("td",c()([{attrs:{parentName:"tr"}},{align:"left"}]),["/api/v1/login/foo"]),r("td",c()([{attrs:{parentName:"tr"}},{align:"left"}]),[r("inlineCode",{attrs:{parentName:"td"}},["http://identityprovider:8080/login/foo"])])]),r("tr",{attrs:{parentName:"tbody"}},[r("td",c()([{attrs:{parentName:"tr"}},{align:"left"}]),["/api/v1/cart/items"]),r("td",c()([{attrs:{parentName:"tr"}},{align:"left"}]),[r("inlineCode",{attrs:{parentName:"td"}},["http://cartservice:8080/api/v1/items"])])]),r("tr",{attrs:{parentName:"tbody"}},[r("td",c()([{attrs:{parentName:"tr"}},{align:"left"}]),["/api/v1/account/brenda"]),r("td",c()([{attrs:{parentName:"tr"}},{align:"left"}]),[r("inlineCode",{attrs:{parentName:"td"}},["http://accountservice:8080/user/brenda/info"])])])])]),r("h2",["Using Variables and Expressions"]),r("p",["An example to send an additional header with client request header to a configured\nbackend and gets evaluated on per-request basis:"]),r("pre",[r("code",c()([{attrs:{parentName:"pre"}},{className:"language-hcl"}]),['server "variables-srv" {\n  endpoint "/" {\n    proxy {\n      backend "my_backend_definition" {\n        set_request_headers = {\n          # simple variable lookup\n          x-uuid = request.id\n          # template string\n          user-agent = "myproxyClient/${request.headers.app-version}"\n          # expressions and function calls\n          x-env-user = env.USER != "" ? upper(env.USER) : "UNKNOWN"\n        }\n      }\n    }\n  }\n}\n'])])])}f.isMDXComponent=!0,n.default={name:"Mdx",inject:{$mdxComponents:{default:function(){return function(){return{}}}}},computed:{components:function(){return this.$mdxComponents()}},render:function(e){return r=d.b.bind({createElement:e,components:this.components}),f({components:this.components})}}}}]);