(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{555:function(e,t,n){"use strict";n.r(t);var r,l=n(94),o=n.n(l),d=n(161),m=n(261),c=["components"],h={};function N(e){var t=e.components,n=Object(d.a)(e,c);return r("wrapper",o()([{},h,{},n,{attrs:{components:t,mdxType:"MDXLayout"}}]),[r("h1",["Merging"]),r("p",["Couper supports merging of blocks and attributes from multiple configuration files\n(see ",r("a",o()([{attrs:{parentName:"p"}},{href:"CLI.md#global-options"}]),["Global Options of Command Line Interface"]),")."]),r("ul",[r("li",{attrs:{parentName:"ul"}},[r("a",o()([{attrs:{parentName:"li"}},{href:"#merging"}]),["Merging"])]),r("li",{attrs:{parentName:"ul"}},[r("a",o()([{attrs:{parentName:"li"}},{href:"#general-rules-of-merging"}]),["General Rules of Merging"])]),r("li",{attrs:{parentName:"ul"}},[r("a",o()([{attrs:{parentName:"li"}},{href:"#merging-of-server-blocks"}]),["Merging of ",r("inlineCode",{attrs:{parentName:"a"}},["server"])," Blocks"])]),r("li",{attrs:{parentName:"ul"}},[r("a",o()([{attrs:{parentName:"li"}},{href:"#merging-of-definitions-blocks"}]),["Merging of ",r("inlineCode",{attrs:{parentName:"a"}},["definitions"])," Blocks"])]),r("li",{attrs:{parentName:"ul"}},[r("a",o()([{attrs:{parentName:"li"}},{href:"#merging-of-defaults-blocks"}]),["Merging of ",r("inlineCode",{attrs:{parentName:"a"}},["defaults"])," Blocks"])]),r("li",{attrs:{parentName:"ul"}},[r("a",o()([{attrs:{parentName:"li"}},{href:"#merging-of-settings-blocks"}]),["Merging of ",r("inlineCode",{attrs:{parentName:"a"}},["settings"])," Blocks"])])]),r("h2",["General Rules of Merging"]),r("p",["When merging, all attributes (except ",r("inlineCode",{attrs:{parentName:"p"}},["environment_variables"])," in the ",r("inlineCode",{attrs:{parentName:"p"}},["defaults"])," block) replace existing attributes with the same name, if any, otherwise they are added."]),r("p",["Blocks that cannot have labels (eg. ",r("inlineCode",{attrs:{parentName:"p"}},["cors"]),", ",r("inlineCode",{attrs:{parentName:"p"}},["files"])," etc.) replace existing blocks with the same name, if any, otherwise they are added."]),r("p",["Blocks with optional labels (eg. ",r("inlineCode",{attrs:{parentName:"p"}},["server"]),", ",r("inlineCode",{attrs:{parentName:"p"}},["api"]),", ",r("inlineCode",{attrs:{parentName:"p"}},["spa"]),", ",r("inlineCode",{attrs:{parentName:"p"}},["files"])," etc.) are merged recursively with blocks with the same label (blocks without a label are merged with blocks with the same name and no label in each context), if any, otherwise they are added. Only one unlabeled block of the same type is allowed in each context (eg. ",r("inlineCode",{attrs:{parentName:"p"}},["api"])," blocks in a ",r("inlineCode",{attrs:{parentName:"p"}},["server"])," block)."]),r("p",["Blocks with required label (eg. ",r("inlineCode",{attrs:{parentName:"p"}},["endpoint"]),") replace existing blocks with the same name and label in each context, if any, otherwise they are added."]),r("p",["Blocks with (optional) multiple labels (eg. ",r("inlineCode",{attrs:{parentName:"p"}},["error_handler"]),") replace existing blocks with identical labels, if any, otherwise they are added."]),r("p",["Currently, here is no way to remove an attribute or a block from the configuration."]),r("h2",["Merging of ",r("inlineCode",{attrs:{parentName:"h2"}},["server"])," Blocks"]),r("ul",[r("li",{attrs:{parentName:"ul"}},["When ",r("inlineCode",{attrs:{parentName:"li"}},["server"])," blocks are merged:"]),r("li",{attrs:{parentName:"ul"}},["All attributes replace existing attributes with the same name, if any, otherwise they are added."]),r("li",{attrs:{parentName:"ul"}},["The ",r("inlineCode",{attrs:{parentName:"li"}},["cors"])," blocks replace existing blocks with the same name, if any, otherwise, they are added."]),r("li",{attrs:{parentName:"ul"}},["All ",r("inlineCode",{attrs:{parentName:"li"}},["endpoint"])," blocks replace existing blocks with the same label, if any, otherwise they are added."]),r("li",{attrs:{parentName:"ul"}},["When ",r("inlineCode",{attrs:{parentName:"li"}},["spa"])," or ",r("inlineCode",{attrs:{parentName:"li"}},["files"])," blocks are merged:"]),r("li",{attrs:{parentName:"ul"}},["All attributes replace existing attributes with the same name, if any, otherwise they are added."]),r("li",{attrs:{parentName:"ul"}},["The ",r("inlineCode",{attrs:{parentName:"li"}},["cors"])," block replaces existing ",r("inlineCode",{attrs:{parentName:"li"}},["cors"])," block, if any, otherwise a new ",r("inlineCode",{attrs:{parentName:"li"}},["cors"])," block is added."]),r("li",{attrs:{parentName:"ul"}},["When ",r("inlineCode",{attrs:{parentName:"li"}},["api"])," blocks are merged:",r("ul",{attrs:{parentName:"li"}},[r("li",{attrs:{parentName:"ul"}},["All attributes replace existing attributes with the same name, if any, otherwise they are added."]),r("li",{attrs:{parentName:"ul"}},["The ",r("inlineCode",{attrs:{parentName:"li"}},["cors"])," block replaces existing ",r("inlineCode",{attrs:{parentName:"li"}},["cors"])," block, if any, otherwise a new ",r("inlineCode",{attrs:{parentName:"li"}},["cors"])," block is added."]),r("li",{attrs:{parentName:"ul"}},["All ",r("inlineCode",{attrs:{parentName:"li"}},["endpoint"])," blocks replace existing blocks with the same label, if any, otherwise they are added."]),r("li",{attrs:{parentName:"ul"}},["All ",r("inlineCode",{attrs:{parentName:"li"}},["error_handler"])," blocks replace existing blocks with identical labels, if any, otherwise they are added."])])])]),r("p",[r("strong",{attrs:{parentName:"p"}},["Note:"])," An ",r("inlineCode",{attrs:{parentName:"p"}},["error_handler"])," block cannot be replaced in or added to an ",r("inlineCode",{attrs:{parentName:"p"}},["endpoint"])," block. Therefore, the ",r("inlineCode",{attrs:{parentName:"p"}},["endpoint"])," block must be completely replaced."]),r("h2",["Merging of ",r("inlineCode",{attrs:{parentName:"h2"}},["definitions"])," Blocks"]),r("ul",[r("li",{attrs:{parentName:"ul"}},["The ",r("inlineCode",{attrs:{parentName:"li"}},["definitions"])," blocks are merged recursively, if any, otherwise a new ",r("inlineCode",{attrs:{parentName:"li"}},["definitions"])," block is added."]),r("li",{attrs:{parentName:"ul"}},["All blocks inside a ",r("inlineCode",{attrs:{parentName:"li"}},["definitions"])," block replace existing blocks with the same name and label."])]),r("h2",["Merging of ",r("inlineCode",{attrs:{parentName:"h2"}},["defaults"])," Blocks"]),r("ul",[r("li",{attrs:{parentName:"ul"}},["The ",r("inlineCode",{attrs:{parentName:"li"}},["defaults"])," blocks are merged recursively, if any, otherwise a new ",r("inlineCode",{attrs:{parentName:"li"}},["defaults"])," block is added."]),r("li",{attrs:{parentName:"ul"}},["All attributes inside a ",r("inlineCode",{attrs:{parentName:"li"}},["defaults"])," block (except ",r("inlineCode",{attrs:{parentName:"li"}},["environment_variables"]),") replace existing attributes with the same name, if any, otherwise they are added."]),r("li",{attrs:{parentName:"ul"}},["Single values of an ",r("inlineCode",{attrs:{parentName:"li"}},["environment_variables"])," attribute replace existing values with the same key, if any, otherwise they are added."])]),r("h2",["Merging of ",r("inlineCode",{attrs:{parentName:"h2"}},["settings"])," Blocks"]),r("ul",[r("li",{attrs:{parentName:"ul"}},["The ",r("inlineCode",{attrs:{parentName:"li"}},["settings"])," blocks are merged recursively, if any, otherwise a new ",r("inlineCode",{attrs:{parentName:"li"}},["settings"])," block is added."]),r("li",{attrs:{parentName:"ul"}},["All attributes inside a ",r("inlineCode",{attrs:{parentName:"li"}},["settings"])," block replace existing attributes with the same name, if any, otherwise they are added."])])])}N.isMDXComponent=!0,t.default={name:"Mdx",inject:{$mdxComponents:{default:function(){return function(){return{}}}}},computed:{components:function(){return this.$mdxComponents()}},render:function(e){return r=m.b.bind({createElement:e,components:this.components}),N({components:this.components})}}}}]);